#+TITLE: Scripts for Git
#+AUTHOR: Yuriy Gritsenko
#+startup: inlineimages

* List of scripts

|------------------------------+--------------------------------------------------------------------------|
| File                         | Description                                                              |
|------------------------------+--------------------------------------------------------------------------|
| [[file:bin/git-clear-reflog][git-clear-reflog]]             | Clean up the repository from Git reflogs                                 |
| [[file:bin/git-revert-branch][git-revert-branch]]            | Reset the local branch to match the remote branch.                       |
| [[file:bin/git-search-for-code-multiple][git-search-for-code-multiple]] | Find files that contain multiple terms, not necessarily on the same line |
| [[file:bin/git-status-extra][git-status-extra]]             | Show extended Git status for working tree and submodules                 |
|------------------------------+--------------------------------------------------------------------------|

*** git-status-extra

Show extended Git status for working tree and submodules

  #+begin_src text
$ git status-extra

# Working tree status:

## Branch-name
 ?? file1-or-directory1-name
 ?? file2-or-directory2-name

Last commit subject:
hash (branch/tag/hash) Commit. (date) <Author>

# Submodule(s):

Status:
 a123456 path2submodule1/submodule1 (branch/tag/hash)
+b123456 path2submodule2/submodule2 (branch/tag/hash)
-b123456 path2submodule3/submodule3 (branch/tag/hash)

Summary:
 * path2submodule2/submodule2 hash-one...hash-other (3):
   < Commit1
   < Commit2
   < Commit3

State:
Entering: 'name1'
 M  file1-or-directory1-name
 ?? file2-or-directory2-name
Entering: 'name2'
Entering: 'name3'

Last commit subject:
Entering 'name1'
hash (branch/tag/hash) Name1 Commit. (date) <Author>
Entering 'name2'
hash (branch/tag/hash) Name2 Commit. (date) <Author>
Entering 'name3'
hash (branch/tag/hash) Name3 Commit. (date) <Author>
  #+end_src

* Installation
** Download project
=git clone https://github.com/yuravg/git-scripts= or [[https://github.com/yuravg/git-scripts/archive/master.zip][zip-file]]

** Setup
You may copy scripts from =git-scripts/bin= to any of your =PATH= directories or use one of installation scripts:
- =install.sh= - copy all git-scripts to $HOME/bin directory
- =install_mklink.sh= - creates symbolic links in the $HOME/bin directory pointing to git-scripts files (Linux OS)
- =install_mklink.ps1= - creates symbolic links in the $HOME/bin directory pointing to git-scripts files (Windows OS)
