#!/usr/bin/env bash

# Show extended Git status for working tree and submodules

SCRIPT_NAME=$(basename "${BASH_SOURCE##*/}")
if [ "$1" = '-h' ] || [ "$1" = '--help' ]; then
    echo "Usage:"
    echo "  $SCRIPT_NAME [-c|--color] [-l|--last] [-d|--data]"
    echo
    echo "OPTIONS:"
    echo "    -c|--color"
    echo "            Use color output."
    echo "    -l|--last"
    echo "            Show last commit."
    echo "    -d|--data"
    echo "            Enable user data format for commits."
    exit 0
fi

GREEN="$(tput setaf 2)"
NORMAL="$(tput sgr0)"

COLOR_TITLE="$NORMAL"
SHOW_LAST_COMMIT=0
USER_DATA_FORMAT=0
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        -c|--color)
            COLOR_TITLE="$GREEN"
            shift;;
        -l|--last)
            SHOW_LAST_COMMIT=1
            shift;;
        -d|--data)
            USER_DATA_FORMAT=1
            SHOW_LAST_COMMIT=1
            shift;;
        *)
            echo Warning! Unexpected option: "$1"
            shift;;
    esac
done

sm_status() {
    # short sha1
    git submodule status --recursive | sed 's/\([^abcdef0-9]\{,2\}\)\([abcdef0-9]\{7\}\)\([abcdef0-9]\{33\}\)\(.*\)/\1\2\4/'
}

sm_state() {
    git submodule foreach --recursive "git status --short"
}

sm_summary() {
    git submodule summary --summary-limit 3
}

last_commit() {
    if [[ "$USER_DATA_FORMAT" -ne 1 ]]; then
        git log -1 HEAD --pretty=format:'%h %d %s (%cr) <%an>'
    else
        git log -1 HEAD --date=format:'%y-%m-%d %H:%M' --pretty=format:'%h %d %s (%ad) <%an>'
    fi
}

submodules_last_commit() {
    if [[ "$USER_DATA_FORMAT" -ne 1 ]]; then
        git submodule foreach --recursive "git log -1 HEAD --pretty=format:'%h %d %s (%cr) <%an>'"
    else
        git submodule foreach --recursive "git log -1 HEAD --date=format:'%y-%m-%d %H:%M' --pretty=format:'%h %d %s (%ad) <%an>'"
    fi
}

echo_cmd() {
    echo "${COLOR_TITLE}$1${NORMAL}"
    echo
}

echo_cmd "# Working tree status:"

git status --short --branch

if [[ "$SHOW_LAST_COMMIT" -eq 1 ]]; then
    echo
    echo "Last commit subject:"
    last_commit
fi

SM_STATUS_LOG=$(sm_status)
if [[ -n "$SM_STATUS_LOG" ]]; then
    echo
    echo_cmd "# Submodule(s):"
    echo "Status:"
    echo "$SM_STATUS_LOG"

    SM_SUMMARY_LOG=$(sm_summary)
    if [[ -n "$SM_SUMMARY_LOG" ]]; then
        echo
        echo "Summary:"
        sm_summary
    else
        # sm_summary command has empty lane
        echo
    fi

    echo "State:"
    sm_state
    # echo "$ST_LOG" | sed "s/Entering\s*'.*'\s*//"
    # echo "$ST_LOG" | sed "s/$/!!!!/"

    if [[ "$SHOW_LAST_COMMIT" -eq 1 ]]; then
        echo
        echo "Last commit subject:"
        submodules_last_commit
    fi
fi
